package br.edu.utfpr.view;

import br.edu.utfpr.DAO.CustosDao;
import br.edu.utfpr.DAO.EntradaLotesDao;
import br.edu.utfpr.DAO.ProdutosDao;
import br.edu.utfpr.entidades.Custos;
import br.edu.utfpr.entidades.EntradaLotes;
import br.edu.utfpr.entidades.Produtos;
import br.edu.utfpr.funcoes.Mensagens;
import br.edu.utfpr.model.CustosListModel;
import br.edu.utfpr.model.EntradaDeLotesListModel;
import br.edu.utfpr.model.ProdutosListModel;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author ferlo
 */
public class RegistroDeCustos extends javax.swing.JInternalFrame {
    // Guarda os codigos dos lotes do combobox
    Integer[] codigosLotes;
    
    // Guarda os codigos dos produtos do combobox
    Integer[] codigosProdutos;
    
    // Conexão com banco
    ProdutosDao produtosDao = new ProdutosDao();
    ProdutosListModel produtosListModel;
    
    // Conexão com banco
    EntradaLotesDao entradaLotesDao = new EntradaLotesDao();
    EntradaDeLotesListModel entradaLotesListModel;
    
    // Conexão com banco
    CustosDao custosDao = new CustosDao();
    CustosListModel custosListModel;
    
    // Funcoes para mensagens
    Mensagens mensagens = new Mensagens();
    
    public RegistroDeCustos() {
        initComponents();
        
        listagemDeDados("");
        
        alimentaComboBoxLotes();
        alimentaComboBoxProdutos();
    }
    
    private void alimentaComboBoxLotes() {
        
        List<EntradaLotes> listaEntradaLotes = entradaLotesDao.listar();
        entradaLotesListModel = new EntradaDeLotesListModel(listaEntradaLotes);
        
        // Cria um array com os itens para a ComboBox
        String[] nomesLotes = new String[entradaLotesListModel.getRowCount()+1];
        
        codigosLotes = new Integer[entradaLotesListModel.getRowCount()];
        
        for (int i=0; i<=entradaLotesListModel.getRowCount(); i++) {
            if (i==0) {
                nomesLotes[i] = "Selecione o Lote";
            } else {
                nomesLotes[i] = entradaLotesListModel.getValueAt(i-1, 1).toString();
                codigosLotes[i-1] = Integer.parseInt(entradaLotesListModel.getValueAt(i-1, 0).toString());
            }
        }
        
        // Cria um modelo de dados para a ComboBox
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(nomesLotes);

        // Define o modelo de dados
        jComboBoxLotes.setModel(model);
    }
    
    private void alimentaComboBoxProdutos() {
        
        List<Produtos> listaProdutos = produtosDao.listar();
        produtosListModel = new ProdutosListModel(listaProdutos);
        
        // Cria um array com os itens para a ComboBox
        String[] nomesProdutos = new String[produtosListModel.getRowCount()+1];
        
        codigosProdutos = new Integer[produtosListModel.getRowCount()];
        
        for (int i=0; i<=produtosListModel.getRowCount(); i++) {
            if (i==0) {
                nomesProdutos[i] = "Selecione o Produto";
            } else {
                nomesProdutos[i] = produtosListModel.getValueAt(i-1, 1).toString();
                codigosProdutos[i-1] = Integer.parseInt(produtosListModel.getValueAt(i-1, 0).toString());
            }
        }
        
        // Cria um modelo de dados para a ComboBox
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(nomesProdutos);

        // Define o modelo de dados
        jComboBoxProduto.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneRegistroCustos = new javax.swing.JTabbedPane();
        jPanelRegistrarCustosAba1 = new javax.swing.JPanel();
        jButtonFecharAba1 = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jComboBoxLotes = new javax.swing.JComboBox<>();
        jLabelLote = new javax.swing.JLabel();
        jLabelProduto = new javax.swing.JLabel();
        jComboBoxProduto = new javax.swing.JComboBox<>();
        jFormattedTextFieldQuantidade = new javax.swing.JFormattedTextField();
        jLabelQuantidade = new javax.swing.JLabel();
        jLabelValor = new javax.swing.JLabel();
        jFormattedTextFieldValor = new javax.swing.JFormattedTextField();
        jFormattedTextFieldData = new javax.swing.JFormattedTextField();
        jLabelDataContagem = new javax.swing.JLabel();
        jLabelDescricaoMotivo = new javax.swing.JLabel();
        jTextFieldDescricaoMotivo = new javax.swing.JTextField();
        jPanelCustosRegistradosAba2 = new javax.swing.JPanel();
        jButtonFecharAba2 = new javax.swing.JButton();
        jScrollPaneRegistroCusto = new javax.swing.JScrollPane();
        jTableRegistroCusto = new javax.swing.JTable();
        jButtonExcluir = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jLabelIdentificadorLotePesquisa = new javax.swing.JLabel();
        jTextFieldIdentificadorLotePesquisar = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Registro de Custos");

        jButtonFecharAba1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/fechar.png"))); // NOI18N
        jButtonFecharAba1.setText("Fechar");
        jButtonFecharAba1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharAba1ActionPerformed(evt);
            }
        });

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/salvar.png"))); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jComboBoxLotes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um Lote", "Lote Teste" }));

        jLabelLote.setText("Lote * ");

        jLabelProduto.setText("Produto *");

        jComboBoxProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um Produto", "Produto Teste" }));
        jComboBoxProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProdutoActionPerformed(evt);
            }
        });

        jFormattedTextFieldQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextFieldQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldQuantidadeFocusLost(evt);
            }
        });

        jLabelQuantidade.setText("Quantidade *");

        jLabelValor.setText("Valor Total *");

        jFormattedTextFieldValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jFormattedTextFieldData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        jLabelDataContagem.setText("Data *");
        jLabelDataContagem.setToolTipText("");

        jLabelDescricaoMotivo.setText("Descrição/Motivo *");

        javax.swing.GroupLayout jPanelRegistrarCustosAba1Layout = new javax.swing.GroupLayout(jPanelRegistrarCustosAba1);
        jPanelRegistrarCustosAba1.setLayout(jPanelRegistrarCustosAba1Layout);
        jPanelRegistrarCustosAba1Layout.setHorizontalGroup(
            jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                        .addComponent(jLabelDescricaoMotivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDescricaoMotivo))
                    .addGroup(jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                        .addComponent(jLabelDataContagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                        .addComponent(jButtonFecharAba1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                        .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                                .addComponent(jLabelQuantidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                                .addComponent(jLabelLote)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelProduto)
                            .addComponent(jLabelValor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextFieldValor)
                            .addComponent(jComboBoxProduto, 0, 206, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelRegistrarCustosAba1Layout.setVerticalGroup(
            jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegistrarCustosAba1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLote)
                    .addComponent(jComboBoxLotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelProduto)
                    .addComponent(jComboBoxProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQuantidade)
                    .addComponent(jFormattedTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelValor)
                    .addComponent(jFormattedTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescricaoMotivo)
                    .addComponent(jTextFieldDescricaoMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDataContagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelRegistrarCustosAba1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonFecharAba1))
                .addContainerGap())
        );

        jTabbedPaneRegistroCustos.addTab("Registrar Custos", jPanelRegistrarCustosAba1);

        jButtonFecharAba2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/fechar.png"))); // NOI18N
        jButtonFecharAba2.setText("Fechar");
        jButtonFecharAba2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharAba2ActionPerformed(evt);
            }
        });

        jTableRegistroCusto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Lote", "Produto", "Quantidade", "Valor", "Descrição/Motivo", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPaneRegistroCusto.setViewportView(jTableRegistroCusto);

        jButtonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/excluir.png"))); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/editar.png"))); // NOI18N
        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jLabelIdentificadorLotePesquisa.setText("Identificador do Lote");

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/pesquisar.png"))); // NOI18N
        jButtonPesquisar.setText("Perquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCustosRegistradosAba2Layout = new javax.swing.GroupLayout(jPanelCustosRegistradosAba2);
        jPanelCustosRegistradosAba2.setLayout(jPanelCustosRegistradosAba2Layout);
        jPanelCustosRegistradosAba2Layout.setHorizontalGroup(
            jPanelCustosRegistradosAba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCustosRegistradosAba2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCustosRegistradosAba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCustosRegistradosAba2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFecharAba2))
                    .addComponent(jScrollPaneRegistroCusto, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addGroup(jPanelCustosRegistradosAba2Layout.createSequentialGroup()
                        .addComponent(jLabelIdentificadorLotePesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIdentificadorLotePesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar)))
                .addContainerGap())
        );
        jPanelCustosRegistradosAba2Layout.setVerticalGroup(
            jPanelCustosRegistradosAba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCustosRegistradosAba2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCustosRegistradosAba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdentificadorLotePesquisa)
                    .addComponent(jTextFieldIdentificadorLotePesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneRegistroCusto, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCustosRegistradosAba2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFecharAba2)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonExcluir))
                .addContainerGap())
        );

        jTabbedPaneRegistroCustos.addTab("Custos Registrados", jPanelCustosRegistradosAba2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneRegistroCustos, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneRegistroCustos)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFecharAba2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharAba2ActionPerformed
        super.dispose();
    }//GEN-LAST:event_jButtonFecharAba2ActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        listagemDeDados(jTextFieldIdentificadorLotePesquisar.getText());
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (validaCampos()) {
            Custos custos = new Custos(
                codigosLotes[jComboBoxLotes.getSelectedIndex()-1],
                jComboBoxLotes.getSelectedItem().toString(),
                codigosProdutos[jComboBoxProduto.getSelectedIndex()-1],
                jComboBoxProduto.getSelectedItem().toString(),
                Float.parseFloat(jFormattedTextFieldQuantidade.getText().toString().replace(".", "").replace(",", ".")),
                Float.parseFloat(jFormattedTextFieldValor.getText().toString().replace(".", "").replace(",", ".")),
                jTextFieldDescricaoMotivo.getText(),
                jFormattedTextFieldData.getText().toString()
            );

            custosDao.inserir(custos);
            
            listagemDeDados("");
        
            limpaCampos();
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonFecharAba1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharAba1ActionPerformed
        super.dispose();
    }//GEN-LAST:event_jButtonFecharAba1ActionPerformed

    private void jComboBoxProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProdutoActionPerformed
        cauculaValor();
    }//GEN-LAST:event_jComboBoxProdutoActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        int indiceTabela = jTableRegistroCusto.getSelectedRow();
        Object codCustos = custosListModel.getValueAt(indiceTabela, 0);
            
        if (custosDao.verificaLotesBaixado(custosDao.codLotePeloCodCusto((Integer) codCustos))) {
            // Caso o lote ja tenha sido finalizado
            mensagens.errorMessage("Exclusão Inválida","O Lote vinculado a esse Custo já foi baixado");
        } else {
            custosDao.remover((Integer) codCustos);
            listagemDeDados("");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jFormattedTextFieldQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldQuantidadeFocusLost
        cauculaValor();
    }//GEN-LAST:event_jFormattedTextFieldQuantidadeFocusLost

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        if (jTableRegistroCusto.getSelectedRow() != -1) {
            int indiceTabela = jTableRegistroCusto.getSelectedRow();
            Object codCustos = custosListModel.getValueAt(indiceTabela, 0);
            
            if (custosDao.verificaLotesBaixado(custosDao.codLotePeloCodCusto((Integer) codCustos))) {
                // Caso o lote ja tenha sido finalizado
                mensagens.errorMessage("Edição Inválida","O Lote vinculado a esse Custo já foi baixado");
            } else {
                EditarCustos editarCustos = new EditarCustos(custosDao.buscarPorCodigo((Integer) codCustos), this);

                int x = (int) (getParent().getWidth() - editarCustos.getWidth()) / 2;
                int y = (int) (getParent().getHeight() - editarCustos.getHeight()) / 2;

                editarCustos.setLocation(x, y);

                getParent().add(editarCustos);
                editarCustos.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void limpaCampos() {
        jComboBoxLotes.setSelectedIndex(0);
        jComboBoxProduto.setSelectedIndex(0);
        jFormattedTextFieldQuantidade.setText("");
        jFormattedTextFieldValor.setText("");
        jTextFieldDescricaoMotivo.setText("");
        jFormattedTextFieldData.setText("");
    }
    
    private void cauculaValor() {
        if (jComboBoxProduto.getSelectedIndex() != 0) {
            int codigoProduto = codigosProdutos[jComboBoxProduto.getSelectedIndex()-1];
            float valorCampo = custosDao.buscaValorProduto(codigoProduto);
            float quantidade = 0;
            
            if (!jFormattedTextFieldQuantidade.getText().toString().isEmpty()) {
                quantidade = Float.parseFloat(jFormattedTextFieldQuantidade.getText().toString().replace(".", "").replace(",", "."));
            }

            jFormattedTextFieldValor.setText(Float.toString(quantidade*valorCampo).replace(".", ","));
        } else {
            jFormattedTextFieldValor.setText("");
        }
    }
    
    public void listagemDeDados(String nome) {
        // Listagem na tabela
        List<Custos> lista = custosDao.buscarPorNome(nome);
        custosListModel = new CustosListModel(lista);
        jTableRegistroCusto.setModel(custosListModel);
    }
            
    private boolean validaCampos() {
        if (jComboBoxLotes.getSelectedIndex() == 0) {
            mensagens.errorMessage("Campo Inválido","Selecione um Lote");
            jComboBoxLotes.requestFocus();
            return false;
        } else if (custosDao.verificaLotesBaixado(codigosLotes[jComboBoxLotes.getSelectedIndex()-1])) {
            mensagens.errorMessage("Campo Inválido","Selecione um Lote que já não foi baixado");
            jComboBoxLotes.requestFocus();
            return false;
        } else if (jComboBoxProduto.getSelectedIndex() == 0) {
            mensagens.errorMessage("Campo Inválido","Selecione um Produto");
            jComboBoxProduto.requestFocus();
            return false;
        } else if (jFormattedTextFieldQuantidade.getText().toString().isEmpty()) {
            mensagens.errorMessage("Campo Inválido", "Preencha o campo Quantidade");
            jFormattedTextFieldQuantidade.requestFocus();
            return false;
        } else if (jFormattedTextFieldQuantidade.getText().toString().equals("0,00")) {
            mensagens.errorMessage("Campo Inválido", "Preencha uma Quantidade maior que 0");
            jFormattedTextFieldQuantidade.requestFocus();
            return false;
        } else if (jFormattedTextFieldValor.getText().toString().isEmpty()) {
            mensagens.errorMessage("Campo Inválido", "Preencha o campo Valor");
            jFormattedTextFieldValor.requestFocus();
            return false;
        } else if (jFormattedTextFieldValor.getText().toString().equals("0,00")) {
            mensagens.errorMessage("Campo Inválido", "Preencha um Valor maior que 0");
            jFormattedTextFieldValor.requestFocus();
            return false;
        }  else if (jTextFieldDescricaoMotivo.getText().isEmpty()) {
            mensagens.errorMessage("Campo Inválido", "Preencha o campo Descrição/Motivo");
            jTextFieldDescricaoMotivo.requestFocus();
            return false;
        } else if (jFormattedTextFieldData.getText().toString().isEmpty()) {
            mensagens.errorMessage("Campo Inválido","Preencha o campo Data");
            jFormattedTextFieldData.requestFocus();
            return false;
        } else {
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonFecharAba1;
    private javax.swing.JButton jButtonFecharAba2;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxLotes;
    private javax.swing.JComboBox<String> jComboBoxProduto;
    private javax.swing.JFormattedTextField jFormattedTextFieldData;
    private javax.swing.JFormattedTextField jFormattedTextFieldQuantidade;
    private javax.swing.JFormattedTextField jFormattedTextFieldValor;
    private javax.swing.JLabel jLabelDataContagem;
    private javax.swing.JLabel jLabelDescricaoMotivo;
    private javax.swing.JLabel jLabelIdentificadorLotePesquisa;
    private javax.swing.JLabel jLabelLote;
    private javax.swing.JLabel jLabelProduto;
    private javax.swing.JLabel jLabelQuantidade;
    private javax.swing.JLabel jLabelValor;
    private javax.swing.JPanel jPanelCustosRegistradosAba2;
    private javax.swing.JPanel jPanelRegistrarCustosAba1;
    private javax.swing.JScrollPane jScrollPaneRegistroCusto;
    private javax.swing.JTabbedPane jTabbedPaneRegistroCustos;
    private javax.swing.JTable jTableRegistroCusto;
    private javax.swing.JTextField jTextFieldDescricaoMotivo;
    private javax.swing.JTextField jTextFieldIdentificadorLotePesquisar;
    // End of variables declaration//GEN-END:variables
}
