/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.edu.utfpr.view;

import br.edu.utfpr.DAO.ArquivoDao;
import br.edu.utfpr.DAO.EntradaLotesDao;
import br.edu.utfpr.entidades.RelatorioLote;
import br.edu.utfpr.model.RelatorioDeLoteListModel;
import java.io.File;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ferlo
 */
public class RelatorioDeLote extends javax.swing.JInternalFrame {
    
    EntradaLotesDao entradaLotesDao = new EntradaLotesDao();
    RelatorioDeLoteListModel relatorioDeLoteListModel;
    
    public RelatorioDeLote() {
        initComponents();
        listagemDeDados("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonFechar = new javax.swing.JButton();
        jButtonEmitirRelatorio = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPaneRelatorioDeLote = new javax.swing.JScrollPane();
        jTableRelatorioDeLote = new javax.swing.JTable();
        jLabelIdentificadorLotePesquisa = new javax.swing.JLabel();
        jTextFieldIdentificadorLotePesquisar = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Relatório de Lote");

        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/fechar.png"))); // NOI18N
        jButtonFechar.setText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jButtonEmitirRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/relatorio.png"))); // NOI18N
        jButtonEmitirRelatorio.setText("Emitir Relatório");
        jButtonEmitirRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmitirRelatorioActionPerformed(evt);
            }
        });

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/pesquisar.png"))); // NOI18N
        jButtonPesquisar.setText("Perquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTableRelatorioDeLote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Lote", "Data de Entrada", "Data de Saída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneRelatorioDeLote.setViewportView(jTableRelatorioDeLote);

        jLabelIdentificadorLotePesquisa.setText("Identificador do Lote");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneRelatorioDeLote, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelIdentificadorLotePesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIdentificadorLotePesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonEmitirRelatorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFechar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelIdentificadorLotePesquisa)
                        .addComponent(jTextFieldIdentificadorLotePesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneRelatorioDeLote, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFechar)
                    .addComponent(jButtonEmitirRelatorio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        super.dispose();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonEmitirRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmitirRelatorioActionPerformed
        
        if (jTableRelatorioDeLote.getSelectedRow() != -1) {
            JFileChooser chooser = new JFileChooser();
            if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                
                int indiceTabela = jTableRelatorioDeLote.getSelectedRow();
                Object codLotes = relatorioDeLoteListModel.getValueAt(indiceTabela, 0);
                
                String relatorio = geraRelatorio((Integer) codLotes);
                
                File file = new File(chooser.getSelectedFile().getPath());
                ArquivoDao arquivoDao = new ArquivoDao();
                
                if(!file.exists()){
                    arquivoDao.gravar(file, relatorio);
                } else {
                    int opcao = JOptionPane.showConfirmDialog(this, "O arquivo espcificado já existe" + 
                    "Deseja substituí-lo?", "Arquivo", JOptionPane.YES_NO_CANCEL_OPTION);
                    if(opcao == JOptionPane.YES_OPTION){
                        arquivoDao.gravar(file, relatorio);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButtonEmitirRelatorioActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        listagemDeDados(jTextFieldIdentificadorLotePesquisar.getText());
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private String geraRelatorio(int codLotes) {
        Locale localeBR = new Locale("pt","BR");
        NumberFormat dinheiro = NumberFormat.getCurrencyInstance(localeBR);
        NumberFormat inteiro = NumberFormat.getInstance();
                
        RelatorioLote relatorioLote = entradaLotesDao.buscarRelatorioDeLotePorCodigo(codLotes);

        return "Identificador do Lote - "+relatorioLote.getIdentificador()+System.lineSeparator()
                + "Propriedade - "+relatorioLote.getPropriedade()+System.lineSeparator()
                + "Granja - "+relatorioLote.getGranja()+ System.lineSeparator()
                + System.lineSeparator()
                + "Data de Entrada - "+relatorioLote.getDataEntrada()+System.lineSeparator()
                + "Data de Saida - "+relatorioLote.getDataSaida()+System.lineSeparator()
                + System.lineSeparator()
                + "------------ Resultado Financeiro ------------"+ System.lineSeparator()
                + "Valor de Entrada                     "+dinheiro.format(relatorioLote.getValorEntradaLote()*(-1))+System.lineSeparator()
                + "Soma dos Custos                      "+dinheiro.format(relatorioLote.getValorCustosLote()*(-1))+System.lineSeparator()
                + "Valor da Saída                       "+dinheiro.format(relatorioLote.getValorSaidaLote())+System.lineSeparator()
                + System.lineSeparator()
                + "Resultado                            "+dinheiro.format(relatorioLote.getValorSaidaLote()-relatorioLote.getValorEntradaLote()-relatorioLote.getValorCustosLote())+System.lineSeparator()
                + System.lineSeparator()
                + "-------------- Resumo de Perdas --------------"+System.lineSeparator()
                + "Quantidade Inicial de Frangos        "+inteiro.format(relatorioLote.getQuantidadeFrangos())+System.lineSeparator()
                + "Contagem Total de Perdas             "+inteiro.format(relatorioLote.getSomaPerdas()*(-1))+System.lineSeparator()
                + System.lineSeparator()
                + "Contagem Final de Frangos            "+inteiro.format(relatorioLote.getQuantidadeFrangos()-relatorioLote.getSomaPerdas());
    }
    
    public void listagemDeDados(String nome) {
        // Listagem na tabela
        List<RelatorioLote> lista = entradaLotesDao.buscarRelatorioDeLotePorNome(nome);
        relatorioDeLoteListModel = new RelatorioDeLoteListModel(lista);
        jTableRelatorioDeLote.setModel(relatorioDeLoteListModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEmitirRelatorio;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JLabel jLabelIdentificadorLotePesquisa;
    private javax.swing.JScrollPane jScrollPaneRelatorioDeLote;
    private javax.swing.JTable jTableRelatorioDeLote;
    private javax.swing.JTextField jTextFieldIdentificadorLotePesquisar;
    // End of variables declaration//GEN-END:variables
}
