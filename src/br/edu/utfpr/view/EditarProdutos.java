/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.edu.utfpr.view;

import br.edu.utfpr.DAO.ProdutosDao;
import br.edu.utfpr.entidades.Produtos;
import br.edu.utfpr.funcoes.Mensagens;
import br.edu.utfpr.model.ProdutosListModel;
import java.util.List;

/**
 *
 * @author ferlo
 */
public class EditarProdutos extends javax.swing.JInternalFrame {
    List<Produtos> ListaProdutos;
    ProdutosListModel ProdutosListModel;
    
    CadastroDeProdutos cadastroDeProdutos;
    
    // Conex√£o com banco
    ProdutosDao produtosDao = new ProdutosDao();
    
    // Funcoes para mensagens
    Mensagens mensagens = new Mensagens();
    
    int idProduto;
    
    public EditarProdutos(List<Produtos> ListaProdutos, CadastroDeProdutos cadastroDeProdutos) {
        initComponents();
        this.ListaProdutos = ListaProdutos;
        this.cadastroDeProdutos = cadastroDeProdutos;
        alimentaCampos();
    }

    public void alimentaCampos() {
        ProdutosListModel = new ProdutosListModel(ListaProdutos);
        
        idProduto = Integer.parseInt(ProdutosListModel.getValueAt(0, 0).toString());
        jTextFieldProduto.setText(ProdutosListModel.getValueAt(0, 1).toString());
        jTextFieldCategoria.setText(ProdutosListModel.getValueAt(0, 2).toString());
        jFormattedTextFieldQuantidadeVolume.setText(ProdutosListModel.getValueAt(0, 3).toString().replace(".", ","));
        jTextFieldUnidadeMedida.setText(ProdutosListModel.getValueAt(0, 4).toString());
        jFormattedTextFieldValor.setText(ProdutosListModel.getValueAt(0, 5).toString().replace(".", ","));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldProduto = new javax.swing.JTextField();
        jTextFieldCategoria = new javax.swing.JTextField();
        jTextFieldUnidadeMedida = new javax.swing.JTextField();
        jLabelValor = new javax.swing.JLabel();
        jFormattedTextFieldQuantidadeVolume = new javax.swing.JFormattedTextField();
        jButtonFecharAba1 = new javax.swing.JButton();
        jFormattedTextFieldValor = new javax.swing.JFormattedTextField();
        jButtonSalvar = new javax.swing.JButton();
        jLabelProduto = new javax.swing.JLabel();
        jLabelCategoria = new javax.swing.JLabel();
        jLabelQuantidadeVolume = new javax.swing.JLabel();
        jLabelUnidadeMedida = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Editar Produto");

        jLabelValor.setText("Valor *");

        jFormattedTextFieldQuantidadeVolume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jButtonFecharAba1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/fechar.png"))); // NOI18N
        jButtonFecharAba1.setText("Cancelar");
        jButtonFecharAba1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharAba1ActionPerformed(evt);
            }
        });

        jFormattedTextFieldValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/icones/salvar.png"))); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jLabelProduto.setText("Produto *");

        jLabelCategoria.setText("Categoria *");

        jLabelQuantidadeVolume.setText("Quantidade/Volume *");

        jLabelUnidadeMedida.setText("Unidade de Medida *");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCategoria))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldProduto))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabelValor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextFieldValor))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelQuantidadeVolume)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextFieldQuantidadeVolume, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 37, Short.MAX_VALUE)
                                .addComponent(jButtonFecharAba1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSalvar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelUnidadeMedida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldUnidadeMedida)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProduto)
                    .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCategoria)
                    .addComponent(jTextFieldCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQuantidadeVolume)
                    .addComponent(jLabelUnidadeMedida)
                    .addComponent(jTextFieldUnidadeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldQuantidadeVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelValor)
                    .addComponent(jFormattedTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonFecharAba1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFecharAba1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharAba1ActionPerformed
        super.dispose();
    }//GEN-LAST:event_jButtonFecharAba1ActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (validaCampos()) {
            Produtos produtos = new Produtos(
                jTextFieldProduto.getText(),
                jTextFieldCategoria.getText(),
                Float.parseFloat(jFormattedTextFieldQuantidadeVolume.getText().toString().replace(".", "").replace(",", ".")),
                jTextFieldUnidadeMedida.getText(),
                Float.parseFloat(jFormattedTextFieldValor.getText().toString().replace(".", "").replace(",", "."))
            );
            
            produtos.setIdProdutos(idProduto);
            
            produtosDao.alterar(produtos);
            
            listagemDeDados("");
            
            super.dispose();
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void listagemDeDados(String nome) {
        cadastroDeProdutos.listagemDeDados(nome);
    }
    
    private boolean validaCampos() {
        if (jTextFieldProduto.getText().isEmpty()) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha o campo Produto");
            jTextFieldProduto.requestFocus();
            return false;
        } else if (jTextFieldCategoria.getText().isEmpty()) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha o campo Categoria");
            jTextFieldCategoria.requestFocus();
            return false;
        } else if (jFormattedTextFieldQuantidadeVolume.getText().toString().isEmpty()) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha o campo Quantidade/Volume");
            jFormattedTextFieldQuantidadeVolume.requestFocus();
            return false;
        } else if (jFormattedTextFieldQuantidadeVolume.getText().toString().equals("0")) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha uma Quantidade/Volume maior que 0");
            jFormattedTextFieldQuantidadeVolume.requestFocus();
            return false;
        }  else if (jTextFieldUnidadeMedida.getText().isEmpty()) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha o campo Unidade de Medida");
            jTextFieldUnidadeMedida.requestFocus();
            return false;
        } else if (jFormattedTextFieldValor.getText().toString().isEmpty()) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha o campo Valor");
            jFormattedTextFieldValor.requestFocus();
            return false;
        } else if (jFormattedTextFieldValor.getText().toString().equals("0,00")) {
            mensagens.errorMessage("Campo Inv√°lido", "Preencha um Valor maior que 0");
            jFormattedTextFieldValor.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFecharAba1;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JFormattedTextField jFormattedTextFieldQuantidadeVolume;
    private javax.swing.JFormattedTextField jFormattedTextFieldValor;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelProduto;
    private javax.swing.JLabel jLabelQuantidadeVolume;
    private javax.swing.JLabel jLabelUnidadeMedida;
    private javax.swing.JLabel jLabelValor;
    private javax.swing.JTextField jTextFieldCategoria;
    private javax.swing.JTextField jTextFieldProduto;
    private javax.swing.JTextField jTextFieldUnidadeMedida;
    // End of variables declaration//GEN-END:variables
}
